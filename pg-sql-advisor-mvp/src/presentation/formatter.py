# src/presentation/formatter.py
from typing import Dict, Any, List

SEV_EMOJI = {"info":"‚ÑπÔ∏è", "warning":"üü†", "critical":"üî¥", "blocker":"üõë"}

def format_adviser_human(resp: Dict[str, Any], style: str = "md", verbosity: str = "short") -> str:
    risk = resp.get("risk", {})
    recs: List[Dict[str, Any]] = resp.get("recommendations", [])
    sev = (risk.get("severity") or "info").lower()
    emoji = SEV_EMOJI.get(sev, "‚ÑπÔ∏è")
    score = risk.get("score", 0)
    drivers = risk.get("drivers") or []
    conf = risk.get("confidence_factor")

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    lines = []
    if style == "md":
        lines.append(f"### –ò—Ç–æ–≥\n- –†–∏—Å–∫: **{emoji} {sev.title()} ({score}/100)**")
        if drivers:
            lines.append(f"- –î—Ä–∞–π–≤–µ—Ä—ã: " + ", ".join(drivers))
        if conf is not None:
            lines.append(f"- Confidence factor: {conf}")
        lines.append("")
    else:
        lines.append(f"–ò—Ç–æ–≥: {sev.title()} {score}/100 {('['+', '.join(drivers)+']') if drivers else ''}")

    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if recs:
        if style == "md":
            lines.append("### –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (–ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É)")
        else:
            lines.append("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")

        for r in recs:
            title = r.get("title") or "Recommendation"
            action = r.get("action", {})
            effort = r.get("effort")
            conf = r.get("confidence")
            why_nodes = "; ".join(
                f"nodeId: {e.get('nodeId')}, relation: {e.get('relation')}"
                for e in (r.get("evidence") or [])
            )

            # —à–∞–ø–∫–∞ –ø—É–Ω–∫—Ç–∞
            if style == "md":
                lines.append(f"- {title}")
                if why_nodes:
                    lines.append(f"  - –ü–æ—á–µ–º—É: {why_nodes}")
            else:
                lines.append(f"- {title} ({why_nodes})")

            # –¥–µ–π—Å—Ç–≤–∏—è
            ddl = action.get("ddl")
            alter = action.get("alter")
            rewrite = action.get("rewrite_sql_hint")
            if rewrite:
                if style == "md":
                    lines.append(f"  - –ß—Ç–æ —Å–¥–µ–ª–∞—Ç—å: {rewrite}")
                else:
                    lines.append(f"  - –ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å: {rewrite}")
            if ddl:
                if style == "md":
                    lines.append(f"  - DDL: `{ddl}`")
                    lines.append(f"    ‚Ä¢ rollback: `DROP INDEX CONCURRENTLY {ddl.split(' ON ')[0].split()[-1]};`")
                    lines.append(f"    ‚Ä¢ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è: –≤—ã–ø–æ–ª–Ω–∏—Ç—å ANALYZE")
                else:
                    lines.append(f"  - DDL: {ddl}")
            if alter:
                lines.append(f"  - ALTER: {alter}")

            # –º–µ—Ç–∞
            eg = r.get("expected_gain", {})
            gain_kind = eg.get("kind")
            gain_src = eg.get("source")
            if style == "md":
                lines.append(f"  - –ö–∞–∫ —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç: —Ç–∏–ø: {gain_kind}; –æ—Ü–µ–Ω–∫–∞: {gain_src}")
                if effort or conf:
                    lines.append(f"  - –≤–ª–æ–∂–µ–Ω–∏–µ: {effort or 'n/a'}; —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {conf or 'n/a'}")
            else:
                lines.append(f"  - –≠—Ñ—Ñ–µ–∫—Ç: {gain_kind}/{gain_src}; Effort: {effort}; Conf: {conf}")

            if verbosity == "short":
                # –≤ –∫—Ä–∞—Ç–∫–æ–º —Ä–µ–∂–∏–º–µ –Ω–µ —Ä–∞—Å–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–ª—å—à–µ
                continue

        # –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –≤ –∫–æ–Ω—Ü–µ –±–ª–æ–∫–∞
        lines.append("")
    else:
        lines.append("_–ü—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ._" if style == "md" else "–ü—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

    return "\n".join(lines)
